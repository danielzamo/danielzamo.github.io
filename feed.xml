

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://danielzamo.github.io/</id>
  <title>Desarrollo contenidos en sitios estáticos</title>
  <subtitle>Sitio desarrollado con Jekyll, usando el theme Chirdy.</subtitle>
  <updated>2024-10-30T02:15:33+01:00</updated>
  <author>
    <name>Daniel Oscar Zamo</name>
    <uri>https://danielzamo.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://danielzamo.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://danielzamo.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator>
  <rights> © 2024 Daniel Oscar Zamo </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Generación imágenes lqip (uso magick, convert y/u otros)</title>
    <link href="https://danielzamo.github.io/posts/lqip-images/" rel="alternate" type="text/html" title="Generación imágenes lqip (uso magick, convert y/u otros)" />
    <published>2024-10-27T07:10:00+01:00</published>
  
    <updated>2024-10-27T07:10:00+01:00</updated>
  
    <id>https://danielzamo.github.io/posts/lqip-images/</id>
    <content src="https://danielzamo.github.io/posts/lqip-images/" />
    <author>
      <name>dzamo</name>
    </author>

  
    
    <category term="SSG" />
    
    <category term="Jekyll" />
    
    <category term="lqip" />
    
    <category term="Imágenes" />
    
  

  <summary>Las imágenes LQIP (Low-Quality Image Placeholders) se utilizan para mejorar la experiencia del usuario al cargar imágenes en la web. Estas imágenes de baja calidad se muestran mientras se cargan las versiones de alta calidad.

En esta entrada se indican algunas formas de generar este tipo de imágenes LQIP en formato Base64.

Herramientas y Proceso para Generar LQIP

ImageMagick (convert y/o mag...</summary>

  </entry>

  
  <entry>
    <title>Jekyll | bundle | modificando Gemfile</title>
    <link href="https://danielzamo.github.io/posts/jekyll-theme-chirpy-agregando-gemas/" rel="alternate" type="text/html" title="Jekyll | bundle | modificando Gemfile" />
    <published>2024-10-27T07:10:00+01:00</published>
  
    <updated>2024-10-27T07:10:00+01:00</updated>
  
    <id>https://danielzamo.github.io/posts/jekyll-theme-chirpy-agregando-gemas/</id>
    <content src="https://danielzamo.github.io/posts/jekyll-theme-chirpy-agregando-gemas/" />
    <author>
      <name>dzamo</name>
    </author>

  
    
    <category term="SSG" />
    
    <category term="Jekyll" />
    
    <category term="Linux" />
    
    <category term="Jekyll-Chirpy" />
    
    <category term="bundle" />
    
    <category term="gemas" />
    
  

  <summary>En esta entrada se modifica el fichero Gemfile y se instalan las gemas mediante bundler, para el theme Chirpy del generador de sitio Jekyll.

Fichero Gemfile

cat Gemfile
# frozen_string_literal: true
source &amp;quot;https://rubygems.org&amp;quot;

gemspec

gem &amp;quot;html-proofer&amp;quot;, &amp;quot;~&amp;amp;gt; 5.0&amp;quot;, group: :test

platforms :mingw, :x64_mingw, :mswin, :jruby do
  gem &amp;quot;tzinfo&amp;quot;, &amp;quot;&amp;amp;gt;= 1&amp;quot;, &amp;quot;&amp;amp;lt; 3&amp;quot;
  gem &amp;quot;tzinfo-data&amp;quot;
end

...</summary>

  </entry>

  
  <entry>
    <title>Hugo - theme Universal</title>
    <link href="https://danielzamo.github.io/posts/ssg-hugo-theme-universal/" rel="alternate" type="text/html" title="Hugo - theme Universal" />
    <published>2024-10-20T08:10:00+02:00</published>
  
    <updated>2024-10-20T08:10:00+02:00</updated>
  
    <id>https://danielzamo.github.io/posts/ssg-hugo-theme-universal/</id>
    <content src="https://danielzamo.github.io/posts/ssg-hugo-theme-universal/" />
    <author>
      <name>dzamo</name>
    </author>

  
    
    <category term="SSG" />
    
    <category term="Hugo" />
    
    <category term="Themes" />
    
    <category term="Go" />
    
    <category term="Generadores de sitios estáticos" />
    
  

  <summary>En esta entrada se resume como configurar el theme Universal sobre el generador de sitios estático Hugo.

Configurar theme Universal sobre Hugo

Pre requisitos instalados, supuestos cumplidos


  node.js, npm, go, hugo, git: instalado.
  Repositorio con GitHub Page o Gitlab Page (o similar): git@github.com:&amp;amp;lt;username&amp;amp;gt;/&amp;amp;lt;nombre_repo&amp;amp;gt;.io.git.


Verificaciones pre requisitos

ssg-hugo.dz...</summary>

  </entry>

  
  <entry>
    <title>Jekyll plugins/complementos</title>
    <link href="https://danielzamo.github.io/posts/jekyll-plugins-add/" rel="alternate" type="text/html" title="Jekyll plugins/complementos" />
    <published>2024-10-10T08:10:00+02:00</published>
  
    <updated>2024-10-10T08:10:00+02:00</updated>
  
    <id>https://danielzamo.github.io/posts/jekyll-plugins-add/</id>
    <content src="https://danielzamo.github.io/posts/jekyll-plugins-add/" />
    <author>
      <name>dzamo</name>
    </author>

  
    
    <category term="SSG" />
    
    <category term="Jekyll" />
    
    <category term="Linux" />
    
  

  <summary>Los complementos (plugins) de Jekyll permiten crear contenido personalizado y específico para el sitio. Hay muchos complementos disponibles e incluso se puede escribir los propios.

En esta entrada se indica como agregar tres complementos (plugins) oficiales que son útiles en cualquier sitio de Jekyll. Estos son:


  jekyll-sitemap-link: crea un archivo de mapa del sitio para ayudar a los motor...</summary>

  </entry>

  
  <entry>
    <title>Hugo - theme Toha</title>
    <link href="https://danielzamo.github.io/posts/ssg-hugo-theme-toha/" rel="alternate" type="text/html" title="Hugo - theme Toha" />
    <published>2024-10-08T08:10:00+02:00</published>
  
    <updated>2024-10-08T08:10:00+02:00</updated>
  
    <id>https://danielzamo.github.io/posts/ssg-hugo-theme-toha/</id>
    <content src="https://danielzamo.github.io/posts/ssg-hugo-theme-toha/" />
    <author>
      <name>dzamo</name>
    </author>

  
    
    <category term="SSG" />
    
    <category term="Hugo" />
    
    <category term="Go" />
    
    <category term="Generadores de sitios estáticos" />
    
  

  <summary>En esta entrada se resume como desplegar un sitio en el localhost con el generador Hugo, y aplicar el theme Toha.



Creando sitio Hugo con theme Toha

Pre requisitos instalados, supuestos cumplidos


  node.js, npm, go, hugo, git: instalado.
  Repositorio con GitHub Page o Gitlab Page (o similar): git@github.com:&amp;amp;lt;username&amp;amp;gt;/&amp;amp;lt;nombre_repo&amp;amp;gt;.io.git.


Verificaciones pre requisitos

gith...</summary>

  </entry>

</feed>


